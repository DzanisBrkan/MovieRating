// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoviesRatingAPI.Database;

namespace MoviesRatingAPI.Migrations
{
    [DbContext(typeof(MovieRatingContext))]
    [Migration("20210427235358_updateMigration")]
    partial class updateMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Bosnian_Latin_100_BIN")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MoviesRatingAPI.Database.Cast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Age")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cast");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = "57 years",
                            FirstName = "Johnny",
                            LastName = "Depp"
                        },
                        new
                        {
                            Id = 2,
                            Age = "46 years",
                            FirstName = "Leonardo",
                            LastName = "DiCaprio"
                        },
                        new
                        {
                            Id = 3,
                            Age = "83 years",
                            FirstName = "Anthony ",
                            LastName = "Hopkins"
                        });
                });

            modelBuilder.Entity("MoviesRatingAPI.Database.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CoverImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReleaseDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Movie");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CoverImage = "",
                            Description = "Action movie",
                            ReleaseDate = "22.11.2012",
                            Title = "Inception"
                        },
                        new
                        {
                            Id = 2,
                            CoverImage = "",
                            Description = "Triller",
                            ReleaseDate = "22.11.1994",
                            Title = "The Shawshank Redemption"
                        },
                        new
                        {
                            Id = 3,
                            CoverImage = "",
                            Description = "Action movie",
                            ReleaseDate = "22.11.2020",
                            Title = "Tenet"
                        });
                });

            modelBuilder.Entity("MoviesRatingAPI.Database.MovieCast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CastId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CastId" }, "IX_MovieCast_CastId");

                    b.HasIndex(new[] { "MovieId" }, "IX_MovieCast_MovieId");

                    b.ToTable("MovieCast");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CastId = 1,
                            MovieId = 1
                        },
                        new
                        {
                            Id = 2,
                            CastId = 2,
                            MovieId = 2
                        },
                        new
                        {
                            Id = 3,
                            CastId = 3,
                            MovieId = 3
                        });
                });

            modelBuilder.Entity("MoviesRatingAPI.Database.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("AvgScore")
                        .HasColumnType("real");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "MovieId" }, "IX_Rating_MovieId");

                    b.HasIndex(new[] { "UserId" }, "IX_Rating_UserId");

                    b.ToTable("Rating");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvgScore = 3f,
                            Comment = "Nice movie",
                            MovieId = 1,
                            Score = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            AvgScore = 4f,
                            Comment = "Great movie",
                            MovieId = 2,
                            Score = 4,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            AvgScore = 5f,
                            Comment = "Excellent movie",
                            MovieId = 3,
                            Score = 5,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("MoviesRatingAPI.Database.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "angelina@gmail.com",
                            FirstName = "Angelina",
                            LastName = "Jolie",
                            Password = "test123"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "emily@gmail.com",
                            FirstName = "Emily",
                            LastName = "Blunt",
                            Password = "test123"
                        },
                        new
                        {
                            UserId = 3,
                            Email = "emilia@gmail.com",
                            FirstName = "Emilia ",
                            LastName = "Clarke",
                            Password = "test123"
                        });
                });

            modelBuilder.Entity("MoviesRatingAPI.Database.MovieCast", b =>
                {
                    b.HasOne("MoviesRatingAPI.Database.Cast", "Cast")
                        .WithMany("MovieCasts")
                        .HasForeignKey("CastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoviesRatingAPI.Database.Movie", "Movie")
                        .WithMany("MovieCasts")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cast");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MoviesRatingAPI.Database.Rating", b =>
                {
                    b.HasOne("MoviesRatingAPI.Database.Movie", "Movie")
                        .WithMany("Ratings")
                        .HasForeignKey("MovieId");

                    b.HasOne("MoviesRatingAPI.Database.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserId");

                    b.Navigation("Movie");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoviesRatingAPI.Database.Cast", b =>
                {
                    b.Navigation("MovieCasts");
                });

            modelBuilder.Entity("MoviesRatingAPI.Database.Movie", b =>
                {
                    b.Navigation("MovieCasts");

                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("MoviesRatingAPI.Database.User", b =>
                {
                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
